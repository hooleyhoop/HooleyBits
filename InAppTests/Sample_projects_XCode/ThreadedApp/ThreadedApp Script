(*Copyright (c) 2004  Satimage. All rights reserved.This file belongs to the "ThreadedApp" sample that is a part of the "SampleProjects" package.The "SampleProjects" folder contains a "Read me" file that describes the whole "SampleProjects" package."ThreadedApp" demonstrates how to have your computational code run in its own thread, how to halt then resume its execution and how to perform any required testing in between.The following lines are an AppleScript script that tests the sample application. "ThreadedApp script" must run in Smile and requires the SmileLab license. "ThreadedApp script" interacts with ThreadedApp in order to demonstrates how to use the threading feature.SmileLab documentation can be found at <www.satimage-software.com>.Launch the "ThreadedApp" application (ThreadedApp/build/ThreadedApp), select the whole text then press the 'Enter' key (NOT Carriage Return).*)on notify smile from anApp with data s-- this handler catches the event sent by MessageSmile from your application.	tell application "ThreadedApp" to set a to theInt	quietmsg(s & "  theInt = " & a)		--check extra variables from ThreadedApp	try		tell application "ThreadedApp" to set b to debugvar1		quietmsg("   debugvar1 = " & b)	end try	try		tell application "ThreadedApp" to set b to debugvar2		quietmsg("   debugvar2 = " & b)	end try	try		tell application "ThreadedApp" to set b to debugvar3		QuickCurve(0, b, 0)	end try		--then resume ThreadedApp	try		tell application "ThreadedApp" to resume	on error s		dd(s)	end tryend notify--launch the thread with an initialization parametertell application "ThreadedApp" to compute 10